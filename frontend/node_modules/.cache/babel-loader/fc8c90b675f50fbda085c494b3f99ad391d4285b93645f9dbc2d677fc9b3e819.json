{"ast":null,"code":"import _slicedToArray from\"C:/Users/dahew/Desktop/ec/cs2helper/MERN-Stack-Ecommerce-Website/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{createContext,useEffect,useState}from\"react\";import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";export var ShopContext=/*#__PURE__*/createContext(null);// //initialising the cart with zeroes\n// const getDefaultCart = () => {\n//   let cart = {};\n//   for (let index = 0; index < 300; index++) {\n//     cart[index] = 0;\n//   }\n//   return cart;\n// };\nvar ShopContextProvider=function ShopContextProvider(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),all_product=_useState2[0],setAll_Product=_useState2[1];// //initialising the cart with zeroes\n// const getDefaultCart = () => {\n//   let cart = {};\n//   for (let index = 0; index < 300; index++) {\n//     cart[index] = 0;\n//   }\n//   return cart;\n// };\n//fetching data from the database onto the products section\n// useEffect(() => {\n//   fetch(\"http://localhost:4000/allproducts\")\n//     .then((res) => res.json())\n//     .then((data) => setAll_Product(data));\n//   if (localStorage.getItem(\"auth-token\")) {\n//     fetch(\"http://localhost:3001/getcart\", {\n//       method: \"POST\",\n//       headers: {\n//         Accept: \"application/json\",\n//         \"auth-token\": `${localStorage.getItem(\"auth-token\")}`,\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify(),\n//     })\n//       .then((resp) => resp.json())\n//       .then((data) => {\n//         setCartItems(data);\n//       });\n//   }\n// }, []);\nvar _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),cartItems=_useState4[0],setCartItems=_useState4[1];useEffect(function(){fetch(\"https://uniform-zone.vercel.app/allproducts\").then(function(res){return res.json();}).then(function(data){return setAll_Product(data);});//Fetch cart data from the backend\nif(localStorage.getItem(\"auth-token\")){fetch(\"https://uniform-zone.vercel.app/getcart\",{method:\"POST\",headers:{Accept:\"application/json\",\"auth-token\":\"\".concat(localStorage.getItem(\"auth-token\")),\"Content-Type\":\"application/json\"},body:JSON.stringify()}).then(function(resp){return resp.json();}).then(function(data){setCartItems(data);})// .then((data) => {\n//   // Ensure data is an array and then set the cartItems state\n//   if (Array.isArray(data.cart)) {\n//     setCartItems(data);\n//   } else {\n//     console.error(\"Invalid cart data format:\", data);\n//     setCartItems(data);\n//     const cartLength = Object.keys(cartItems).length;\n//     console.log(`the length of cart is ${cartLength}`);\n//     console.log(data);\n//   }\n// })\n.catch(function(error){console.error(\"Error fetching cart data:\",error);});}},[]);//add to cart\n//add to cart\n// const addToCart = () => {\n//   if (localStorage.getItem(\"auth-token\")) {\n//     fetch(\"http://localhost:4002/addtocart\", {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         \"auth-token\": localStorage.getItem(\"auth-token\"),\n//       },\n//       body: JSON.stringify({ itemId: \"1\" }), // Pass itemId as \"1\" and itemSize as \"M\"\n//     })\n//       .then((resp) => resp.json())\n//       .then((data) => {\n//         console.log(data);\n//       })\n//       .catch((error) => {\n//         console.error(\"Error adding product to cart:\", error);\n//       });\n//   }\n// };\n// const addToCart = (productId, selectedSize) => {\n//   if (localStorage.getItem(\"auth-token\")) {\n//     fetch(\"http://localhost:4002/addtocart\", {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         \"auth-token\": localStorage.getItem(\"auth-token\"),\n//       },\n//       body: JSON.stringify({ itemId: productId, itemSize: selectedSize }),\n//     })\n//       .then((resp) => resp.json())\n//       .then((data) => {\n//         console.log(data);\n//       })\n//       .catch((error) => {\n//         console.error(\"Error adding product to cart:\", error);\n//       });\n//   }\n// };\nvar addToCart=function addToCart(productId,selectedSize){if(localStorage.getItem(\"auth-token\")){axios.post(\"https://uniform-zone.vercel.app/addtocart\",{productId:productId,selectedSize:selectedSize},{headers:{\"Content-Type\":\"application/json\",\"auth-token\":localStorage.getItem(\"auth-token\")}}).then(function(response){console.log(response.data);setCartItems(response.data.user.cart);getTotalCartItems();// setCartItems((prevCartItems) => {\n//   const updatedCartItems = { ...prevCartItems }; // Create a copy to avoid mutation\n//   updatedCartItems[productId] = (prevCartItems[productId] || 0) + 1; // Update quantity for the added product\n//   const newTotalItems = getTotalCartItems(updatedCartItems); // Calculate new total items\n//   return { ...updatedCartItems, totalItems: newTotalItems }; // Update cartItems with quantity and total items\n// });\n}).catch(function(error){console.error(\"Error adding product to cart:\",error);});}};//remove from cart\n// const removeFromCart = (itemId) => {\n//   setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] - 1 }));\n//   if (localStorage.getItem(\"auth-token\")) {\n//     fetch(\"http://localhost:4000/removefromcart\", {\n//       method: \"POST\",\n//       headers: {\n//         Accept: \"application/form-data\",\n//         \"auth-token\": `${localStorage.getItem(\"auth-token\")}`,\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify({ itemId: itemId }),\n//     })\n//       .then((resp) => resp.json())\n//       .then((data) => {\n//         console.log(data);\n//       });\n//   }\n// };\n//remove from cart\n// const removeFromCart = (productIdToRemove) => {\n//   if (localStorage.getItem(\"auth-token\")) {\n//     axios\n//       .post(\n//         \"http://localhost:3001/removefromcart\",\n//         {\n//           productId: productIdToRemove,\n//         },\n//         {\n//           headers: {\n//             \"Content-Type\": \"application/json\",\n//             \"auth-token\": localStorage.getItem(\"auth-token\"),\n//           },\n//         }\n//       )\n//       .then((response) => {\n//         // Update cartItems state by filtering out the removed item\n//         setCartItems((prevCartItems) =>\n//           prevCartItems.filter((item) => item.productId !== productIdToRemove)\n//         );\n//         console.log(response.data);\n//       })\n//       .catch((error) => {\n//         console.error(\"Error removing product from cart:\", error);\n//       });\n//   }\n// };\nvar removeFromCart=function removeFromCart(productIdToRemove,productSize){if(localStorage.getItem(\"auth-token\")){axios.post(\"https://uniform-zone.vercel.app/removeFromcart\",{productId:productIdToRemove,selectedSize:productSize},{headers:{\"Content-Type\":\"application/json\",\"auth-token\":localStorage.getItem(\"auth-token\")}}).then(function(response){// Update cartItems state with the new cart data from the response\nsetCartItems(response.data.cart);console.log(response.data);}).catch(function(error){console.error(\"Error removing product from cart:\",error);});}};//get total cart amount\n// const getTotalCartAmount = () => {\n//   let totalAmount = 0;\n//   for (const item in cartItems) {\n//     if (cartItems[item] > 0) {\n//       let itemInfo = all_product.find(\n//         (product) => product.id === Number(item)\n//       );\n//       totalAmount += cartItems[item] * itemInfo.new_price;\n//     }\n//   }\n//   return totalAmount;\n// };\nvar getTotalCartAmount=function getTotalCartAmount(){var totalAmount=0;// Iterate through each key (productId) in the cartItems object\nfor(var productId in cartItems){if(cartItems.hasOwnProperty(productId)){var item=cartItems[productId];// Check if the item quantity is greater than 0\nif(item.productQuantity>0){// Calculate the total price for this item (quantity * price)\ntotalAmount+=item.productQuantity*item.productPrice;}}}return totalAmount;// Return the total cart amount\n};//get total cart items\n// const getTotalCartItems = () => {\n//   let totalItem = 0;\n//   // Convert cartItems object to an array of values\n//   const cartItemsArray = Object.values(cartItems);\n//   // Iterate over each item in the cartItems array\n//   cartItemsArray.forEach((item) => {\n//     // Add the quantity of each item to the totalItem count\n//     totalItem++;\n//   });\n//   console.log(totalItem);\n//   return totalItem;\n// };\nvar getTotalCartItems=function getTotalCartItems(){var totalItem=Object.keys(cartItems).length;console.log(\"the length of cartitems object is \".concat(totalItem));console.log(cartItems);// // Iterate over the properties of the cartItems object\n// for (const key in cartItems) {\n//   // Check if the property is not from the prototype chain\n//   if (cartItems.hasOwnProperty(key)) {\n//     // Add the quantity of each item to the totalItem count\n//     totalItem++;\n//     // Assuming each item has a 'quantity' property\n//   }\n// }\n// console.log(cartItems);\n// console.log(totalItem); // Log total number of items\nreturn totalItem;// Return total number of items\n};var contextValue={getTotalCartItems:getTotalCartItems,getTotalCartAmount:getTotalCartAmount,all_product:all_product,cartItems:cartItems,addToCart:addToCart,removeFromCart:removeFromCart};return/*#__PURE__*/_jsx(ShopContext.Provider,{value:contextValue,children:props.children});};export default ShopContextProvider;","map":{"version":3,"names":["React","createContext","useEffect","useState","axios","jsx","_jsx","ShopContext","ShopContextProvider","props","_useState","_useState2","_slicedToArray","all_product","setAll_Product","_useState3","_useState4","cartItems","setCartItems","fetch","then","res","json","data","localStorage","getItem","method","headers","Accept","concat","body","JSON","stringify","resp","catch","error","console","addToCart","productId","selectedSize","post","response","log","user","cart","getTotalCartItems","removeFromCart","productIdToRemove","productSize","getTotalCartAmount","totalAmount","hasOwnProperty","item","productQuantity","productPrice","totalItem","Object","keys","length","contextValue","Provider","value","children"],"sources":["C:/Users/dahew/Desktop/ec/cs2helper/MERN-Stack-Ecommerce-Website/frontend/src/Context/ShopContext.jsx"],"sourcesContent":["import React, { createContext, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const ShopContext = createContext(null);\r\n\r\n// //initialising the cart with zeroes\r\n// const getDefaultCart = () => {\r\n//   let cart = {};\r\n//   for (let index = 0; index < 300; index++) {\r\n//     cart[index] = 0;\r\n//   }\r\n//   return cart;\r\n// };\r\n\r\nconst ShopContextProvider = (props) => {\r\n  const [all_product, setAll_Product] = useState([]);\r\n\r\n  // //initialising the cart with zeroes\r\n  // const getDefaultCart = () => {\r\n  //   let cart = {};\r\n  //   for (let index = 0; index < 300; index++) {\r\n  //     cart[index] = 0;\r\n  //   }\r\n  //   return cart;\r\n  // };\r\n\r\n  //fetching data from the database onto the products section\r\n  // useEffect(() => {\r\n  //   fetch(\"http://localhost:4000/allproducts\")\r\n  //     .then((res) => res.json())\r\n  //     .then((data) => setAll_Product(data));\r\n\r\n  //   if (localStorage.getItem(\"auth-token\")) {\r\n  //     fetch(\"http://localhost:3001/getcart\", {\r\n  //       method: \"POST\",\r\n  //       headers: {\r\n  //         Accept: \"application/json\",\r\n  //         \"auth-token\": `${localStorage.getItem(\"auth-token\")}`,\r\n  //         \"Content-Type\": \"application/json\",\r\n  //       },\r\n  //       body: JSON.stringify(),\r\n  //     })\r\n  //       .then((resp) => resp.json())\r\n  //       .then((data) => {\r\n  //         setCartItems(data);\r\n  //       });\r\n  //   }\r\n  // }, []);\r\n  const [cartItems, setCartItems] = useState({});\r\n  useEffect(() => {\r\n    fetch(\"https://uniform-zone.vercel.app/allproducts\")\r\n      .then((res) => res.json())\r\n      .then((data) => setAll_Product(data));\r\n    //Fetch cart data from the backend\r\n    if (localStorage.getItem(\"auth-token\")) {\r\n      fetch(\"https://uniform-zone.vercel.app/getcart\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"auth-token\": `${localStorage.getItem(\"auth-token\")}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(),\r\n      })\r\n        .then((resp) => resp.json())\r\n        .then((data) => {\r\n          setCartItems(data);\r\n        })\r\n\r\n        // .then((data) => {\r\n        //   // Ensure data is an array and then set the cartItems state\r\n        //   if (Array.isArray(data.cart)) {\r\n        //     setCartItems(data);\r\n        //   } else {\r\n        //     console.error(\"Invalid cart data format:\", data);\r\n        //     setCartItems(data);\r\n        //     const cartLength = Object.keys(cartItems).length;\r\n        //     console.log(`the length of cart is ${cartLength}`);\r\n        //     console.log(data);\r\n        //   }\r\n        // })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching cart data:\", error);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  //add to cart\r\n  //add to cart\r\n  // const addToCart = () => {\r\n  //   if (localStorage.getItem(\"auth-token\")) {\r\n  //     fetch(\"http://localhost:4002/addtocart\", {\r\n  //       method: \"POST\",\r\n  //       headers: {\r\n  //         \"Content-Type\": \"application/json\",\r\n  //         \"auth-token\": localStorage.getItem(\"auth-token\"),\r\n  //       },\r\n  //       body: JSON.stringify({ itemId: \"1\" }), // Pass itemId as \"1\" and itemSize as \"M\"\r\n  //     })\r\n  //       .then((resp) => resp.json())\r\n  //       .then((data) => {\r\n  //         console.log(data);\r\n  //       })\r\n  //       .catch((error) => {\r\n  //         console.error(\"Error adding product to cart:\", error);\r\n  //       });\r\n  //   }\r\n  // };\r\n\r\n  // const addToCart = (productId, selectedSize) => {\r\n  //   if (localStorage.getItem(\"auth-token\")) {\r\n  //     fetch(\"http://localhost:4002/addtocart\", {\r\n  //       method: \"POST\",\r\n  //       headers: {\r\n  //         \"Content-Type\": \"application/json\",\r\n  //         \"auth-token\": localStorage.getItem(\"auth-token\"),\r\n  //       },\r\n  //       body: JSON.stringify({ itemId: productId, itemSize: selectedSize }),\r\n  //     })\r\n  //       .then((resp) => resp.json())\r\n  //       .then((data) => {\r\n  //         console.log(data);\r\n  //       })\r\n  //       .catch((error) => {\r\n  //         console.error(\"Error adding product to cart:\", error);\r\n  //       });\r\n  //   }\r\n  // };\r\n\r\n  const addToCart = (productId, selectedSize) => {\r\n    if (localStorage.getItem(\"auth-token\")) {\r\n      axios\r\n        .post(\r\n          \"https://uniform-zone.vercel.app/addtocart\",\r\n          {\r\n            productId,\r\n            selectedSize,\r\n          },\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              \"auth-token\": localStorage.getItem(\"auth-token\"),\r\n            },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          console.log(response.data);\r\n          setCartItems(response.data.user.cart);\r\n\r\n          getTotalCartItems();\r\n          // setCartItems((prevCartItems) => {\r\n          //   const updatedCartItems = { ...prevCartItems }; // Create a copy to avoid mutation\r\n          //   updatedCartItems[productId] = (prevCartItems[productId] || 0) + 1; // Update quantity for the added product\r\n          //   const newTotalItems = getTotalCartItems(updatedCartItems); // Calculate new total items\r\n          //   return { ...updatedCartItems, totalItems: newTotalItems }; // Update cartItems with quantity and total items\r\n          // });\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error adding product to cart:\", error);\r\n        });\r\n    }\r\n  };\r\n\r\n  //remove from cart\r\n  // const removeFromCart = (itemId) => {\r\n  //   setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] - 1 }));\r\n  //   if (localStorage.getItem(\"auth-token\")) {\r\n  //     fetch(\"http://localhost:4000/removefromcart\", {\r\n  //       method: \"POST\",\r\n  //       headers: {\r\n  //         Accept: \"application/form-data\",\r\n  //         \"auth-token\": `${localStorage.getItem(\"auth-token\")}`,\r\n  //         \"Content-Type\": \"application/json\",\r\n  //       },\r\n  //       body: JSON.stringify({ itemId: itemId }),\r\n  //     })\r\n  //       .then((resp) => resp.json())\r\n  //       .then((data) => {\r\n  //         console.log(data);\r\n  //       });\r\n  //   }\r\n  // };\r\n  //remove from cart\r\n  // const removeFromCart = (productIdToRemove) => {\r\n  //   if (localStorage.getItem(\"auth-token\")) {\r\n  //     axios\r\n  //       .post(\r\n  //         \"http://localhost:3001/removefromcart\",\r\n  //         {\r\n  //           productId: productIdToRemove,\r\n  //         },\r\n  //         {\r\n  //           headers: {\r\n  //             \"Content-Type\": \"application/json\",\r\n  //             \"auth-token\": localStorage.getItem(\"auth-token\"),\r\n  //           },\r\n  //         }\r\n  //       )\r\n  //       .then((response) => {\r\n  //         // Update cartItems state by filtering out the removed item\r\n  //         setCartItems((prevCartItems) =>\r\n  //           prevCartItems.filter((item) => item.productId !== productIdToRemove)\r\n  //         );\r\n  //         console.log(response.data);\r\n  //       })\r\n  //       .catch((error) => {\r\n  //         console.error(\"Error removing product from cart:\", error);\r\n  //       });\r\n  //   }\r\n  // };\r\n  const removeFromCart = (productIdToRemove, productSize) => {\r\n    if (localStorage.getItem(\"auth-token\")) {\r\n      axios\r\n        .post(\r\n          \"https://uniform-zone.vercel.app/removeFromcart\",\r\n          {\r\n            productId: productIdToRemove,\r\n            selectedSize: productSize,\r\n          },\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              \"auth-token\": localStorage.getItem(\"auth-token\"),\r\n            },\r\n          }\r\n        )\r\n        .then((response) => {\r\n          // Update cartItems state with the new cart data from the response\r\n          setCartItems(response.data.cart);\r\n          console.log(response.data);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error removing product from cart:\", error);\r\n        });\r\n    }\r\n  };\r\n\r\n  //get total cart amount\r\n  // const getTotalCartAmount = () => {\r\n  //   let totalAmount = 0;\r\n  //   for (const item in cartItems) {\r\n  //     if (cartItems[item] > 0) {\r\n  //       let itemInfo = all_product.find(\r\n  //         (product) => product.id === Number(item)\r\n  //       );\r\n  //       totalAmount += cartItems[item] * itemInfo.new_price;\r\n  //     }\r\n  //   }\r\n  //   return totalAmount;\r\n  // };\r\n\r\n  const getTotalCartAmount = () => {\r\n    let totalAmount = 0;\r\n\r\n    // Iterate through each key (productId) in the cartItems object\r\n    for (const productId in cartItems) {\r\n      if (cartItems.hasOwnProperty(productId)) {\r\n        const item = cartItems[productId];\r\n        // Check if the item quantity is greater than 0\r\n        if (item.productQuantity > 0) {\r\n          // Calculate the total price for this item (quantity * price)\r\n          totalAmount += item.productQuantity * item.productPrice;\r\n        }\r\n      }\r\n    }\r\n\r\n    return totalAmount; // Return the total cart amount\r\n  };\r\n\r\n  //get total cart items\r\n  // const getTotalCartItems = () => {\r\n  //   let totalItem = 0;\r\n  //   // Convert cartItems object to an array of values\r\n  //   const cartItemsArray = Object.values(cartItems);\r\n\r\n  //   // Iterate over each item in the cartItems array\r\n  //   cartItemsArray.forEach((item) => {\r\n  //     // Add the quantity of each item to the totalItem count\r\n  //     totalItem++;\r\n  //   });\r\n  //   console.log(totalItem);\r\n  //   return totalItem;\r\n  // };\r\n\r\n  const getTotalCartItems = () => {\r\n    let totalItem = Object.keys(cartItems).length;\r\n    console.log(`the length of cartitems object is ${totalItem}`);\r\n    console.log(cartItems);\r\n\r\n    // // Iterate over the properties of the cartItems object\r\n    // for (const key in cartItems) {\r\n    //   // Check if the property is not from the prototype chain\r\n    //   if (cartItems.hasOwnProperty(key)) {\r\n    //     // Add the quantity of each item to the totalItem count\r\n    //     totalItem++;\r\n    //     // Assuming each item has a 'quantity' property\r\n    //   }\r\n    // }\r\n    // console.log(cartItems);\r\n    // console.log(totalItem); // Log total number of items\r\n    return totalItem; // Return total number of items\r\n  };\r\n\r\n  const contextValue = {\r\n    getTotalCartItems,\r\n    getTotalCartAmount,\r\n    all_product,\r\n    cartItems,\r\n    addToCart,\r\n    removeFromCart,\r\n  };\r\n  return (\r\n    <ShopContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </ShopContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ShopContextProvider;\r\n"],"mappings":"+JAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CACjE,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE1B,MAAO,IAAM,CAAAC,WAAW,cAAGN,aAAa,CAAC,IAAI,CAAC,CAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,GAAM,CAAAO,mBAAmB,CAAG,QAAtB,CAAAA,mBAAmBA,CAAIC,KAAK,CAAK,CACrC,IAAAC,SAAA,CAAsCP,QAAQ,CAAC,EAAE,CAAC,CAAAQ,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA3CG,WAAW,CAAAF,UAAA,IAAEG,cAAc,CAAAH,UAAA,IAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAAI,UAAA,CAAkCZ,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAAa,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAAvCE,SAAS,CAAAD,UAAA,IAAEE,YAAY,CAAAF,UAAA,IAC9Bd,SAAS,CAAC,UAAM,CACdiB,KAAK,CAAC,6CAA6C,CAAC,CACjDC,IAAI,CAAC,SAACC,GAAG,QAAK,CAAAA,GAAG,CAACC,IAAI,CAAC,CAAC,GAAC,CACzBF,IAAI,CAAC,SAACG,IAAI,QAAK,CAAAT,cAAc,CAACS,IAAI,CAAC,GAAC,CACvC;AACA,GAAIC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAE,CACtCN,KAAK,CAAC,yCAAyC,CAAE,CAC/CO,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACPC,MAAM,CAAE,kBAAkB,CAC1B,YAAY,IAAAC,MAAA,CAAKL,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAE,CACrD,cAAc,CAAE,kBAClB,CAAC,CACDK,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACvB,CAAC,CAAC,CACCZ,IAAI,CAAC,SAACa,IAAI,QAAK,CAAAA,IAAI,CAACX,IAAI,CAAC,CAAC,GAAC,CAC3BF,IAAI,CAAC,SAACG,IAAI,CAAK,CACdL,YAAY,CAACK,IAAI,CAAC,CACpB,CAAC,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,CACCW,KAAK,CAAC,SAACC,KAAK,CAAK,CAChBC,OAAO,CAACD,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CACnD,CAAC,CAAC,CACN,CACF,CAAC,CAAE,EAAE,CAAC,CAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,GAAM,CAAAE,SAAS,CAAG,QAAZ,CAAAA,SAASA,CAAIC,SAAS,CAAEC,YAAY,CAAK,CAC7C,GAAIf,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAE,CACtCrB,KAAK,CACFoC,IAAI,CACH,2CAA2C,CAC3C,CACEF,SAAS,CAATA,SAAS,CACTC,YAAY,CAAZA,YACF,CAAC,CACD,CACEZ,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAClC,YAAY,CAAEH,YAAY,CAACC,OAAO,CAAC,YAAY,CACjD,CACF,CACF,CAAC,CACAL,IAAI,CAAC,SAACqB,QAAQ,CAAK,CAClBL,OAAO,CAACM,GAAG,CAACD,QAAQ,CAAClB,IAAI,CAAC,CAC1BL,YAAY,CAACuB,QAAQ,CAAClB,IAAI,CAACoB,IAAI,CAACC,IAAI,CAAC,CAErCC,iBAAiB,CAAC,CAAC,CACnB;AACA;AACA;AACA;AACA;AACA;AACF,CAAC,CAAC,CACDX,KAAK,CAAC,SAACC,KAAK,CAAK,CAChBC,OAAO,CAACD,KAAK,CAAC,+BAA+B,CAAEA,KAAK,CAAC,CACvD,CAAC,CAAC,CACN,CACF,CAAC,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAM,CAAAW,cAAc,CAAG,QAAjB,CAAAA,cAAcA,CAAIC,iBAAiB,CAAEC,WAAW,CAAK,CACzD,GAAIxB,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAE,CACtCrB,KAAK,CACFoC,IAAI,CACH,gDAAgD,CAChD,CACEF,SAAS,CAAES,iBAAiB,CAC5BR,YAAY,CAAES,WAChB,CAAC,CACD,CACErB,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAClC,YAAY,CAAEH,YAAY,CAACC,OAAO,CAAC,YAAY,CACjD,CACF,CACF,CAAC,CACAL,IAAI,CAAC,SAACqB,QAAQ,CAAK,CAClB;AACAvB,YAAY,CAACuB,QAAQ,CAAClB,IAAI,CAACqB,IAAI,CAAC,CAChCR,OAAO,CAACM,GAAG,CAACD,QAAQ,CAAClB,IAAI,CAAC,CAC5B,CAAC,CAAC,CACDW,KAAK,CAAC,SAACC,KAAK,CAAK,CAChBC,OAAO,CAACD,KAAK,CAAC,mCAAmC,CAAEA,KAAK,CAAC,CAC3D,CAAC,CAAC,CACN,CACF,CAAC,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,GAAM,CAAAc,kBAAkB,CAAG,QAArB,CAAAA,kBAAkBA,CAAA,CAAS,CAC/B,GAAI,CAAAC,WAAW,CAAG,CAAC,CAEnB;AACA,IAAK,GAAM,CAAAZ,SAAS,GAAI,CAAArB,SAAS,CAAE,CACjC,GAAIA,SAAS,CAACkC,cAAc,CAACb,SAAS,CAAC,CAAE,CACvC,GAAM,CAAAc,IAAI,CAAGnC,SAAS,CAACqB,SAAS,CAAC,CACjC;AACA,GAAIc,IAAI,CAACC,eAAe,CAAG,CAAC,CAAE,CAC5B;AACAH,WAAW,EAAIE,IAAI,CAACC,eAAe,CAAGD,IAAI,CAACE,YAAY,CACzD,CACF,CACF,CAEA,MAAO,CAAAJ,WAAW,CAAE;AACtB,CAAC,CAED;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,GAAM,CAAAL,iBAAiB,CAAG,QAApB,CAAAA,iBAAiBA,CAAA,CAAS,CAC9B,GAAI,CAAAU,SAAS,CAAGC,MAAM,CAACC,IAAI,CAACxC,SAAS,CAAC,CAACyC,MAAM,CAC7CtB,OAAO,CAACM,GAAG,sCAAAb,MAAA,CAAsC0B,SAAS,CAAE,CAAC,CAC7DnB,OAAO,CAACM,GAAG,CAACzB,SAAS,CAAC,CAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAO,CAAAsC,SAAS,CAAE;AACpB,CAAC,CAED,GAAM,CAAAI,YAAY,CAAG,CACnBd,iBAAiB,CAAjBA,iBAAiB,CACjBI,kBAAkB,CAAlBA,kBAAkB,CAClBpC,WAAW,CAAXA,WAAW,CACXI,SAAS,CAATA,SAAS,CACToB,SAAS,CAATA,SAAS,CACTS,cAAc,CAAdA,cACF,CAAC,CACD,mBACExC,IAAA,CAACC,WAAW,CAACqD,QAAQ,EAACC,KAAK,CAAEF,YAAa,CAAAG,QAAA,CACvCrD,KAAK,CAACqD,QAAQ,CACK,CAAC,CAE3B,CAAC,CAED,cAAe,CAAAtD,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}